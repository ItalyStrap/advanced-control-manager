<?php

declare(strict_types=1);

namespace ItalyStrap;

use ItalyStrap\Core;

$beta = ' {{BETA VERSION}}';

return [
    [
        'label'         => __('Activate new settings page for widget areas', 'italystrap') . $beta,
        'desc'          => __('This will add new settings page on Appearance where you can create new widget area to append on theme action hook.', 'italystrap'),
        'id'            => 'widget_areas',
        'type'          => 'checkbox',
        'class'         => 'widget_areas medium',
        'default'       => '',
        'sanitize'      => 'sanitize_text_field',
        'show_on'       => Core\is_beta(),
    ],
    [
        'label'         => __('Add Widget Visibility to any widget.', 'italystrap'),
        'desc'          => __('This will add the possibility to choice the widget visibility for front-end.', 'italystrap'),
        'id'            => 'widget_visibility',
        'type'          => 'checkbox',
        'class'         => 'widget_visibility medium',
        'default'       => '',
        'sanitize'      => 'sanitize_text_field',
    ],
    [
        'label'         => __('Activate two new input HTML attributes for every widget', 'italystrap'),
        'desc'          => __('This will add two new input in every widget that allow for custom <code>id</code> and <code>class</code> attributes in the widget container.', 'italystrap'),
        'id'            => 'widget_attributes',
        'type'          => 'checkbox',
        'class'         => 'widget_attributes medium',
        'default'       => '',
        'sanitize'      => 'sanitize_text_field',
    ],
    [
        'label'         => __('Render HTML in Widget Title', 'italystrap'),
        'desc'          => __('Activate this if you want to add an HTML tag to Widget title: replace the opening and closing tags with <code>{{</code> and <code>}}</code>. E.g.: <code>&lt;strong&gt;Widget Title&lt;/strong&gt;</code> <strong>becomes</strong> <code>{{strong}}Widget Title{{/strong}}</code>', 'italystrap'),
        'id'            => 'render_html_in_widget_title',
        'type'          => 'checkbox',
        'class'         => 'render_html_in_widget_title medium',
        'default'       => '',
        // 'validate'   => 'ctype_alpha',
        'sanitize'      => 'sanitize_text_field',
    ],
    [
        'label'         => __('Remove widget title conditionally', 'italystrap'),
        'desc'          => __('Add <code>!!</code> (2 exclamation marks) at the beginning of the widget title to hide it. Example: <code>!!My widget title.</code>', 'italystrap'),
        'id'            => 'remove_widget_title',
        'type'          => 'checkbox',
        'class'         => 'remove_widget_title easy',
        'default'       => '',
        'sanitize'      => 'sanitize_text_field',
    ],
    [
        'label'         => __('Tag Cloud for ItalyStrap', 'italystrap'),
        'id'            => 'custom_tag_cloud',
        'type'          => 'checkbox',
        'class'         => 'custom_tag_cloud easy',
        'default'       => '',
        'sanitize'      => 'sanitize_text_field',
        'show_on'       => Core\is_italystrap_active(),
    ],
    [
        'label'         => __('Widget for custom loop of posts , pages and custom post types', 'italystrap'),
        'desc'          => __('This widget allow you to create a custom loop of posts/page/CPT with a lot of options like "Recent Posts" or "Posts more comented" or "Related posts" ecc and place it in your sidebars. (This plugin does not provide any style, you have to add it in the style.css of your theme)', 'italystrap'),
        'id'            => 'widget_posts',
        'type'          => 'checkbox',
        'class'         => 'widget_posts hard',
        'default'       => '',
        'sanitize'      => 'sanitize_text_field',
    ],
    [
        'label'         => __('Widget for Media Carousel', 'italystrap'),
        'desc'          => __('This will activate a Bootstrap media Carousel with a ton of options, make shure you have a Twitter Bootstrap CSS in your site.', 'italystrap'),
        'id'            => 'media_carousel_widget',
        'type'          => 'checkbox',
        'class'         => 'media_carousel_widget medium',
        'default'       => '',
        'sanitize'      => 'sanitize_text_field',
    ],
    [
        'label'         => __('vCard Local Business', 'italystrap'),
        'desc'          => __('Add a vCard Local Business with Schema.org markup to your theme widgetized area. (This plugin does not provide any style, you have to add it in the style.css of your theme).', 'italystrap'),
        'id'            => 'widget_vcard',
        'type'          => 'checkbox',
        'class'         => 'widget_vcard medium',
        'default'       => '',
        'sanitize'      => 'sanitize_text_field',
    ],
    [
        'label'         => __('Image Widget', 'italystrap') . $beta,
        'desc'          => __('Activate image widget and displays an image from media with an array of options. (This plugin does not provide any style, you have to add it in the style.css of your theme).', 'italystrap'),
        'id'            => 'widget_image',
        'type'          => 'checkbox',
        'class'         => 'widget_image medium',
        'default'       => '',
        'sanitize'      => 'sanitize_text_field',
        'show_on'       => Core\is_beta(),
    ],
    [
        'label'         => __('Nav Menu Widget', 'italystrap') . $beta,
        'desc'          => __('Add an advanced custom menu to your sidebar. Available only for ItalyStrap theme framework.', 'italystrap'),
        'id'            => 'widget_nav_menu',
        'type'          => 'checkbox',
        'class'         => 'widget_nav_menu hard',
        'default'       => '',
        'sanitize'      => 'sanitize_text_field',
        'show_on'       => Core\is_beta() && Core\is_italystrap_active(),
    ],
    [
        'label'         => __('Monster Widget by ItalyStrap {{Only for debug}}', 'italystrap'),
        'desc'          => __('Test multiple widgets by ItalyStrap at the same time.', 'italystrap'),
        'id'            => 'widget_monster',
        'type'          => 'checkbox',
        'class'         => 'widget_monster hard',
        'default'       => '',
        'sanitize'      => 'sanitize_text_field',
        'show_on'       => Core\is_debug(),
    ],
];
